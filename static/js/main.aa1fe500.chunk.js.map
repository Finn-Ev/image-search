{"version":3,"sources":["components/nav-dropdown/nav-dropdown.component.jsx","components/mobile-category-menu/mobile-category-menu.component.jsx","redux/navbar/navbar.actions.js","redux/modal/modal.actions.js","components/header/header.component.jsx","redux/searchImages/searchImages.actions.js","components/form/form.component.jsx","components/category-menu/categories.js","components/category-preview/category-preview.component.jsx","components/category-menu/category-menu.component.jsx","components/footer/footer.component.jsx","pages/home/home.component.jsx","redux/favouriteImages/favouriteImages.actions.js","components/preview-image-footer/preview-image-footer.component.jsx","components/preview-image/preview-image.component.jsx","pages/favourites/favourites.component.jsx","pages/info/info.component.jsx","pages/custom-image-search/custom-image-search.component.jsx","pages/display-category/display-category.component.jsx","components/modal/modal.component.jsx","App.js","redux/favouriteImages/favouriteImages.utils.js","redux/favouriteImages/favouriteImages.reducer.js","redux/searchImages/searchImages.reducer.js","redux/navbar/navbar.reducer.js","redux/modal/modal.reducer.js","redux/rootReducer.js","redux/store.js","utility-components/scroll-to-top.jsx","serviceWorker.js","index.js"],"names":["withRouter","history","closeModal","handleSelect","category","push","Dropdown","alignRight","size","className","Toggle","variant","id","Menu","Item","onClick","connect","dispatch","closeNavbar","type","to","openModal","image","payload","state","favouriteImageIDs","favouriteImages","imageIDs","showMobileNavbar","navbar","toggleNavbar","Navbar","bg","exact","length","setImageAmount","amount","homepage","handleSubmit","useState","queryString","setQueryString","Form","onSubmit","e","Group","Control","required","aria-label","onChange","target","value","name","placeholder","Label","onInput","Button","categories","imageURL","toLowerCase","style","backgroundImage","CategoryMenu","map","key","Footer","window","scrollTo","href","HomePage","preventDefault","toggleFavouriteImage","largeImageURL","user","userImageURL","includes","PreviewImage","webformatURL","src","alt","setFavouriteImages","cachedFavouriteImages","useEffect","forEach","imageID","fetch","then","res","json","data","hits","InfoPage","imageAmount","searchImages","match","images","setImages","noImagesFound","setNoImagesFound","urlQueryString","params","fetchImages","console","log","CategoryPage","fetchCategoryImages","charAt","toUpperCase","slice","currentImage","modal","App","path","component","FavoritenPage","CustomImageSearchPag","handleToggleFavouriteImage","currentImageIDs","imageIDToAdd","filter","currentImageID","initalState","queryInfo","initialState","persistConfig","storage","whitelist","rootReducer","combineReducers","action","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ScrollToTop","prevProps","this","props","location","children","React","Component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.aa1fe500.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./nav-dropdown.styles.scss\"\r\n \r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst NavDropdown = ({history, closeModal}) => {\r\n    const handleSelect = category => {\r\n        history.push(`/kategorie/${category}`)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Dropdown alignRight size=\"sm\" className=\"dropdown\">\r\n        <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\" >\r\n         Kategorien\r\n        </Dropdown.Toggle>\r\n      \r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"natur\")}>Natur</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"landschaften\")}>Landschaften</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"gebäude\")}>Gebäude</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"tiere\")}>Tiere</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"sport\")}>Sport</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"personen\")}>Personen</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(NavDropdown)\r\n\r\n","import React from \"react\";\r\nimport \"./mobile-category-menu.styles.scss\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { closeNavbar } from \"../../redux/navbar/navbar.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MobileCategoryMenu = ({ closeNavbar }) => {\r\n\r\n  return (\r\n    <div className=\"mobile-category-menu\">\r\n      <div className=\"headline\">Kategorien:</div>\r\n      <div className=\"categories\">\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/landschaften\">\r\n          Landschaften\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/gebäude\">\r\n          Gebäude\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/natur\">\r\n          Natur\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/Tiere\">\r\n          Tiere\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/sport\">\r\n          Sport\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/personen\">\r\n          Personen\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeNavbar: () => {\r\n      dispatch(closeNavbar());\r\n    }\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(null, mapDispatchToProps)(MobileCategoryMenu)\r\n);\r\n","export const toggleNavbar = () => ({\r\n    type: \"TOGGLE_NAVBAR\",\r\n})\r\n\r\nexport const closeNavbar = () => ({\r\n    type: \"CLOSE_NAVBAR\",\r\n})","export const openModal = image => ({\r\n    type: \"OPEN_MODAL\",\r\n    payload: image\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: \"CLOSE_MODAL\",\r\n})","import React from \"react\";\r\nimport \"./header.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { toggleNavbar, closeNavbar } from \"../../redux/navbar/navbar.actions\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\n// category menus for different screens\r\nimport NavDropdown from \"../nav-dropdown/nav-dropdown.component\";\r\nimport MobileCategoryMenu from \"../mobile-category-menu/mobile-category-menu.component\";\r\nimport { openModal, closeModal } from \"../../redux/modal/modal.actions\";\r\n\r\nconst Header = ({\r\n  favouriteImageIDs,\r\n  showMobileNavbar,\r\n  toggleNavbar,\r\n  closeNavbar,\r\n  closeModal\r\n}) => {\r\n  return (\r\n    <>\r\n    <Navbar  bg=\"dark\" className=\"header\">\r\n      <Link onClick={closeNavbar} className=\"brand\" to=\"/\">\r\n        Image Search\r\n      </Link>\r\n\r\n      {showMobileNavbar ? (\r\n        <div className=\"mobile-nav-links\">\r\n          <NavLink id=\"home-link\" onClick={closeNavbar} exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n\r\n          <MobileCategoryMenu />\r\n\r\n          <NavLink\r\n            onClick={closeNavbar}\r\n            id=\"favourites-link\"\r\n            exact\r\n            to=\"/favoriten\"\r\n          >\r\n            Favoriten ({favouriteImageIDs.length})\r\n          </NavLink>\r\n        </div>\r\n      ) : (\r\n          \"\"\r\n        )}\r\n      <div className=\"desktop-nav-links\">\r\n        <NavLink onClick={closeModal} exact to=\"/\">\r\n          Home\r\n        </NavLink>\r\n\r\n        <NavDropdown closeModal={closeModal}/>\r\n\r\n        <NavLink onClick={closeModal} id=\"favourites-link\" exact to=\"/favoriten\">\r\n          Favoriten ({favouriteImageIDs.length})\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div onClick={toggleNavbar} className=\"toggle-navbar\">\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-1`}></div>\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-2`}></div>\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-3`}></div>\r\n      </div>\r\n    </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n  showMobileNavbar: state.navbar.showMobileNavbar\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleNavbar: () => dispatch(toggleNavbar()),\r\n  closeNavbar: () => dispatch(closeNavbar()),\r\n  openModal: () => dispatch(openModal()),\r\n  closeModal: () => dispatch(closeModal())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","export const setImageAmount = amount => ({\r\n  type: \"SET_IMAGE_AMOUNT\",\r\n  payload: amount\r\n});\r\n","import React, { useState } from 'react';\r\nimport './form.styles.scss';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { setImageAmount } from '../../redux/searchImages/searchImages.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MyForm = ({ homepage, handleSubmit }) => {\r\n    const [queryString, setQueryString] = useState(\"\")\r\n\r\n    const handleChange = e => {\r\n        setQueryString(e.target.value);\r\n    };\r\n    const handleSelect = e => {\r\n        setImageAmount(e.target.value);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-area\">\r\n            <div className=\"form-wrapper\">\r\n                {homepage ? <h3>Beeindruckende lizenzfreie Bilder</h3> : <h3>Weitere Bilder suchen</h3>}\r\n                <Form\r\n                    onSubmit={(e)=>handleSubmit(e, queryString)}\r\n                    className=\"form\"\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            className=\"mb-3\"\r\n                            required\r\n                            aria-label=\"search images\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"queryString\"\r\n                            placeholder=\"Schlagwort eingeben...\"\r\n                        />\r\n                        <div className=\"image-amount-wrapper\">\r\n                            <Form.Label>Anzahl Bilder:&nbsp; </Form.Label>\r\n\r\n                            <div className=\"select-wrapper\">\r\n                                <select aria-label=\"select image amount\" name=\"imageAmount\" onInput={handleSelect} className=\"mb-3\">\r\n                                    <option>25</option>\r\n                                    <option>50</option>\r\n                                    <option>100</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" variant=\"success\">\r\n                            Suchen\r\n\t\t\t\t\t</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setImageAmount: amount => dispatch(setImageAmount(amount)),\r\n  \r\n});\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(MyForm);\r\n","const categories = [\r\n\t{   \r\n\t\tname: \"Natur\",\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2015/06/19/21/24/the-road-815297_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Landschaften',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2016/10/22/17/46/scotland-1761292_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Gebäude',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/04/07/06/47/moscow-city-2210335_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Tiere',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/08/12/16/59/ara-3601194_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Sport',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/02/06/14/07/dance-3134828_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Menschen',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/08/30/12/45/girl-2696947_960_720.jpg',\r\n\t},\r\n];\r\nexport default categories","import React from 'react';\r\nimport \"./category-preview.styles.scss\"\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst CategoryPreview = ({ history, category }) => {\r\n    const { imageURL, name } = category\r\n\r\n    const handleClick = () => {\r\n        history.push(`/kategorie/${name.toLowerCase()}`)\r\n        \r\n    }\r\n    return (\r\n        <div onClick={handleClick} className=\"category-preview\" style={{ backgroundImage: `url(${imageURL})` }}>\r\n            <div className=\"name-wrapper\">\r\n                <span>{name}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryPreview)","import React from 'react'\r\nimport \"./category-menu.styles.scss\"\r\n\r\nimport categories from \"./categories\" // category array\r\nimport CategoryPreview from '../category-preview/category-preview.component'\r\n\r\nfunction CategoryMenu() {\r\n    return (\r\n        <div className=\"category-menu bg-light\">\r\n            {categories.map(category => {\r\n               return <CategoryPreview key={category.name} category={category}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryMenu\r\n","import React from 'react';\r\nimport \"./footer.styles.scss\"\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer bg-light\">\r\n            <span onClick={() => window.scrollTo(0, 0)} className=\"button\"><i className=\"fas fa-chevron-up\"></i></span> \r\n            <span className=\"link\">&copy; <a href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./home.styles.scss\";\r\n\r\nimport MyForm from \"../../components/form/form.component\";\r\nimport CategoryMenu from \"../../components/category-menu/category-menu.component\";\r\n\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst HomePage = ({ history }) => {\r\n  const handleSubmit = (e, queryString) => {\r\n    e.preventDefault();\r\n    history.push(`/suche/${queryString}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <MyForm homepage handleSubmit={handleSubmit} />\r\n      <CategoryMenu />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage\r\n","export const toggleFavouriteImage = image => ({\r\n    type: \"TOGGLE_FAVOURITE_IMAGE\",\r\n    payload: image\r\n})\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './preview-image-footer.styles.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleFavouriteImage } from '../../redux/favouriteImages/favouriteImages.actions';\r\nimport { openModal, closeModal } from '../../redux/modal/modal.actions';\r\n\r\n\r\nconst PreviewImageFooter = ({ toggleFavouriteImage, openModal, favouriteImageIDs, image, }) => {\r\n\r\n\r\n    const { largeImageURL, user, userImageURL } = image;\r\n\r\n    return (\r\n        <div className=\"image-footer\">\r\n            <p>&copy; {user}</p>\r\n\r\n            <div className=\"button-wrapper\">\r\n                <span className=\"modal-link\" onClick={() => openModal(image)}>\r\n                    <i className=\"fas fa-search-plus\"></i>\r\n                </span>\r\n\r\n                <span className=\"mobile-link\">\r\n                    <a href={largeImageURL}> <i className=\"fas fa-search-plus\"></i></a>\r\n                </span>\r\n\r\n                <span\r\n                    onClick={() => toggleFavouriteImage(image.id)}\r\n                    className={`toggle-favourite ${favouriteImageIDs.includes(image.id) ? 'is-favourite-image' : ''}`}\r\n                >\r\n                    <i className=\"fas fa-heart\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleFavouriteImage: image => dispatch(toggleFavouriteImage(image)),\r\n    openModal: image => dispatch(openModal(image)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewImageFooter);\r\n","import React from \"react\";\r\nimport \"./preview-image.styles.scss\";\r\n\r\nimport PreviewImageFooter from \"../preview-image-footer/preview-image-footer.component\";\r\n\r\nconst PreviewImage = ({ image }) => {\r\n  const { webformatURL, id } = image;\r\n\r\n  const unusableImages = [384178, 2534484]// images where resolution is too low\r\n  \r\n  if(unusableImages.includes(id)){ \r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"preview-image-wrapper\">\r\n      <img src={webformatURL} alt=\"\" />\r\n      <PreviewImageFooter image={image}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./favourites.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst FavoritenPage = ({ favouriteImageIDs }) => {\r\n  const [favouriteImages, setFavouriteImages] = useState([]);\r\n  let cachedFavouriteImages = [];\r\n\r\n  const fetchFavouriteImages = () => {\r\n    if (favouriteImageIDs.length) {\r\n      favouriteImageIDs.forEach(imageID => {\r\n        fetch(\r\n          `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&id=${imageID}`\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            const image = data.hits;\r\n            cachedFavouriteImages = [...cachedFavouriteImages, ...image];\r\n            setFavouriteImages(cachedFavouriteImages);\r\n          });\r\n      });\r\n    } else {\r\n      setFavouriteImages([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFavouriteImages();\r\n  }, [favouriteImageIDs]);\r\n\r\n  return (\r\n    <div className=\"favoriten-page bg-light\">\r\n      <div className=\"header-area\">\r\n        <h3>Deine Favoriten:</h3>\r\n      </div>\r\n\r\n      <div className=\"favourite-images\">\r\n        {favouriteImages.length ? (\r\n          favouriteImages.map(image => {\r\n            return <PreviewImage key={image.id} image={image} />;\r\n          })\r\n        ) : (\r\n          <span className=\"empty\">\r\n            Du hast keine Bilder zu deinen Favoriten hinzugefügt\r\n          </span>\r\n        )}\r\n      </div>\r\n      {favouriteImages.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoritenPage);\r\n","import React from 'react';\r\nimport \"./info.styles.scss\"\r\n\r\nconst InfoPage = () => {\r\n    return (\r\n        <div className=\"info-page\">\r\n            <div className=\"info-details\">\r\n            <h3>Infos zum Projekt</h3>\r\n            <p>Bilderquelle: <a className=\"color-primary\" href=\"https://pixabay.com/de/\">pixabay-API</a></p>\r\n            <p>Umsetzung der Such- und Favoritenfunktion, Darstellung der Bilder: <a className=\"color-primary\" href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></p>\r\n            <p className=\"disclaimer\"> Dieses Projekt ist ein Portfolio-Projekt. <br/> Es soll den Umgang mit einfachen APIs sowie die Nutzung von Redux und dem \r\n                Session- bzw. Localstorge darstellen.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default InfoPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./custom-image-search.styles.scss\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\nimport MyForm from \"../../components/form/form.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CustomImageSearchPage = ({ imageAmount, match, history }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [noImagesFound, setNoImagesFound] = useState(false);\r\n\r\n  const urlQueryString = match.params.urlQueryString;\r\n\r\n  const fetchImages = () => {\r\n    fetch(\r\n      `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&q=${urlQueryString}&lang=de&per_page=${imageAmount}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const images = data.hits;\r\n        if (images.length) {\r\n          setImages(images);\r\n          setNoImagesFound(false);\r\n        } else if (!images.length) {\r\n          setNoImagesFound(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    console.log(\"2.4.20\");\r\n    \r\n  }, [urlQueryString]);\r\n\r\n  const handleSubmit = (e, queryString) => {\r\n    e.preventDefault();\r\n    history.push(`/suche/${queryString}`);\r\n    fetchImages();\r\n    window.scrollTo(0, 350)\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-search-image-page bg-light\">\r\n      <MyForm handleSubmit={handleSubmit} />\r\n      {noImagesFound ? (\r\n        <p className=\"no-images-found\">Keine Bilder gefunden</p>\r\n      ) : (\r\n        <div>\r\n          {urlQueryString && images.length ? (\r\n            <p id=\"query-info\" className=\"query-info bg-dark\">Ergebnisse für \"{urlQueryString}\":</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"display-images\">\r\n            {images.map(image => (\r\n              <PreviewImage key={image.id} image={image} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {images.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  imageAmount: state.searchImages.imageAmount,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CustomImageSearchPage);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./display-category.styles.scss\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst CategoryPage = ({ match }) => {\r\n    const category = match.params.name;\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCategoryImages();\r\n    }, [category]);\r\n\r\n    const fetchCategoryImages = () => {\r\n        fetch(\r\n            `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&per_page=100&q=${category}&lang=de&safesearch=true}`\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const images = data.hits;\r\n                setImages(images);\r\n\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"category-wrapper \">\r\n            <div className=\"category-heading\">\r\n                <h3>\r\n                    Kategorie: {category.charAt(0).toUpperCase()}\r\n                    {category.slice(1)}\r\n                </h3>\r\n            </div>\r\n            <div className=\"category-images bg-light\">\r\n                {images.map(image => (\r\n                    <PreviewImage key={image.id} image={image} />\r\n                ))}\r\n            </div>\r\n            {images.length ? <Footer /> : \"\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React from 'react';\r\nimport \"./modal.styles.scss\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { closeModal } from '../../redux/modal/modal.actions';\r\nimport { toggleFavouriteImage } from '../../redux/favouriteImages/favouriteImages.actions';\r\n\r\n\r\nconst Modal = ({ closeModal, toggleFavouriteImage, currentImage, favouriteImageIDs }) => {\r\n\r\n    return (\r\n        currentImage ?\r\n            <div className=\"modal\">\r\n                <div className=\"modal-buttons\">\r\n                    <span\r\n                        onClick={() => toggleFavouriteImage(currentImage.id)}\r\n                        className={`toggle-favourite ${favouriteImageIDs.includes(currentImage.id) ? 'is-favourite-image' : ''}`}\r\n                    >\r\n                        <i className=\"fas fa-heart\"></i>\r\n                    </span>\r\n                    <span onClick={closeModal} className=\"close-modal\">X</span>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <img src={currentImage.largeImageURL} alt=\"largeImage\" />\r\n                </div>\r\n            </div>\r\n\r\n            : null\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state => {\r\n    return {\r\n        currentImage: state.modal.currentImage,\r\n        favouriteImageIDs: state.favouriteImages.imageIDs,\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    closeModal: () => dispatch(closeModal()),\r\n    toggleFavouriteImage: image => dispatch(toggleFavouriteImage(image))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)","import React from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/header/header.component\";\r\n\r\nimport HomePage from \"./pages/home/home.component\";\r\nimport FavoritenPage from \"./pages/favourites/favourites.component\";\r\nimport InfoPage from \"./pages/info/info.component\";\r\nimport CustomImageSearchPag from \"./pages/custom-image-search/custom-image-search.component\";\r\nimport CategoryPage from \"./pages/display-category/display-category.component\";\r\nimport Modal from \"./components/modal/modal.component\"\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App bg-light\">\r\n      <Header />\r\n      <Modal/>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route path=\"/favoriten\" component={FavoritenPage} />\r\n      <Route path=\"/infos\" component={InfoPage} />\r\n      <Route path=\"/suche/:urlQueryString\" component={CustomImageSearchPag} />\r\n      <Route exact path=\"/kategorie/:name\" component={CategoryPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","export const handleToggleFavouriteImage = (currentImageIDs, imageIDToAdd) => {\r\n    if (currentImageIDs.includes(imageIDToAdd)) {\r\n        return currentImageIDs.filter(currentImageID => currentImageID !== imageIDToAdd)\r\n    } else {\r\n        return [...currentImageIDs, imageIDToAdd]\r\n    }\r\n}","import { handleToggleFavouriteImage } from \"./favouriteImages.utils\";\r\n\r\nconst initalState = {\r\n\timageIDs: [],\r\n};\r\n\r\nexport const favouriteImagesReducer = (state = initalState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"TOGGLE_FAVOURITE_IMAGE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timageIDs: handleToggleFavouriteImage(state.imageIDs, action.payload)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","const initalState = {\r\n\timageAmount: 25,\r\n\tqueryString: '',\r\n\tqueryInfo: \"\",\r\n};\r\n\r\nexport const searchImagesReducer = (state = initalState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_IMAGE_AMOUNT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timageAmount: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","const initialState = {\r\n  showMobileNavbar: false\r\n};\r\nexport const navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: !state.showMobileNavbar\r\n      };\r\n    case \"CLOSE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    currentImage: null\r\n}\r\nexport const modalReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"OPEN_MODAL\":\r\n            return {\r\n                ...state,\r\n               currentImage: action.payload\r\n            }\r\n        case \"CLOSE_MODAL\":\r\n            return {\r\n                ...state,\r\n                currentImage: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { favouriteImagesReducer } from \"./favouriteImages/favouriteImages.reducer\";\r\nimport { searchImagesReducer } from \"./searchImages/searchImages.reducer\"\r\nimport { navbarReducer } from \"./navbar/navbar.reducer\"\r\nimport { modalReducer } from \"./modal/modal.reducer\"\r\n\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"favouriteImages\"]\r\n  };\r\n  \r\n\r\n const rootReducer = combineReducers({\r\n    favouriteImages: favouriteImagesReducer,\r\n    searchImages: searchImagesReducer,\r\n    navbar: navbarReducer,\r\n    modal: modalReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport  rootReducer from './rootReducer'\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nconst middlewares = []\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    middlewares.push(logger);\r\n  }  \r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport ScrollToTop from './utility-components/scroll-to-top'; //scroll to top after each route change\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<ScrollToTop>\r\n\t\t\t\t<PersistGate persistor={persistor}>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</PersistGate>\r\n\t\t\t</ScrollToTop>\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}