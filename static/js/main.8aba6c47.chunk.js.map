{"version":3,"sources":["redux/modal/modal.actions.js","redux/favouriteImages/favouriteImages.actions.js","components/modal/modal.component.jsx","components/nav-dropdown/nav-dropdown.component.jsx","components/mobile-category-menu/mobile-category-menu.component.jsx","redux/navbar/navbar.actions.js","components/header/header.component.jsx","components/form/form.component.jsx","redux/searchImages/searchImages.actions.js","components/category-menu/categories.js","components/category-preview/category-preview.component.jsx","components/category-menu/category-menu.component.jsx","components/footer/footer.component.jsx","pages/home/home.component.jsx","components/preview-image-footer/preview-image-footer.component.jsx","components/preview-image/preview-image.component.jsx","pages/favourites/favourites.component.jsx","pages/info/info.component.jsx","pages/custom-image-search/custom-image-search.component.jsx","pages/display-category/display-category.component.jsx","App.js","redux/favouriteImages/favouriteImages.utils.js","redux/favouriteImages/favouriteImages.reducer.js","redux/searchImages/searchImages.reducer.js","redux/navbar/navbar.reducer.js","redux/modal/modal.reducer.js","redux/rootReducer.js","redux/store.js","utility-components/scroll-to-top.jsx","serviceWorker.js","index.js"],"names":["openModal","image","type","payload","toggleFavouriteImage","connect","state","currentImage","modal","favouriteImageIDs","favouriteImages","imageIDs","dispatch","closeModal","className","onClick","id","includes","src","largeImageURL","alt","withRouter","history","handleSelect","category","push","Dropdown","alignRight","size","Toggle","variant","Menu","Item","closeNavbar","to","showMobileNavbar","navbar","toggleNavbar","Navbar","bg","exact","length","queryString","searchImages","setImageAmount","amount","setQueryString","setQueryInfo","homepage","handleSubmit","Form","onSubmit","Group","Control","required","aria-label","onChange","e","target","value","name","placeholder","Label","onInput","Button","categories","imageURL","toLowerCase","style","backgroundImage","CategoryMenu","map","key","Footer","window","scrollTo","href","preventDefault","user","userImageURL","PreviewImage","webformatURL","useState","setFavouriteImages","cachedFavouriteImages","useEffect","forEach","imageID","fetch","then","res","json","data","hits","InfoPage","imageAmount","queryInfo","match","images","setImages","noImagesFound","setNoImagesFound","urlQueryString","params","fetchImages","CategoryPage","fetchCategoryImages","charAt","toUpperCase","slice","App","path","component","HomePage","FavoritenPage","CustomImageSearchPag","handleToggleFavouriteImage","currentImageIDs","imageIDToAdd","filter","currentImageID","initalState","initialState","persistConfig","storage","whitelist","rootReducer","combineReducers","action","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ScrollToTop","prevProps","this","props","location","children","React","Component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8aba6c47.chunk.js","sourcesContent":["export const openModal = image => ({\r\n    type: \"OPEN_MODAL\",\r\n    payload: image\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: \"CLOSE_MODAL\",\r\n})","export const toggleFavouriteImage = image => ({\r\n    type: \"TOGGLE_FAVOURITE_IMAGE\",\r\n    payload: image\r\n})\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport \"./modal.styles.scss\"\r\n\r\nimport { connect } from 'react-redux';\r\nimport { closeModal } from '../../redux/modal/modal.actions';\r\nimport { toggleFavouriteImage } from '../../redux/favouriteImages/favouriteImages.actions';\r\n\r\n\r\nconst Modal = ({ closeModal, toggleFavouriteImage, currentImage, favouriteImageIDs }) => {\r\n\r\n    return (\r\n        currentImage ?\r\n            <div className=\"modal\">\r\n                <div className=\"modal-buttons\">\r\n                    <span\r\n                        onClick={() => toggleFavouriteImage(currentImage.id)}\r\n                        className={`toggle-favourite ${favouriteImageIDs.includes(currentImage.id) ? 'is-favourite-image' : ''}`}\r\n                    >\r\n                        <i className=\"fas fa-heart\"></i>\r\n                    </span>\r\n                    <span onClick={closeModal} className=\"close-modal\">X</span>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <img src={currentImage.largeImageURL} alt=\"largeImage\" />\r\n                </div>\r\n            </div>\r\n\r\n            : null\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state => {\r\n    return {\r\n        currentImage: state.modal.currentImage,\r\n        favouriteImageIDs: state.favouriteImages.imageIDs,\r\n    }\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    closeModal: () => dispatch(closeModal()),\r\n    toggleFavouriteImage: image => dispatch(toggleFavouriteImage(image))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)","import React from 'react';\r\nimport \"./nav-dropdown.styles.scss\"\r\n \r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst NavDropdown = ({history, closeModal}) => {\r\n    const handleSelect = category => {\r\n        history.push(`/kategorie/${category}`)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Dropdown alignRight size=\"sm\" className=\"dropdown\">\r\n        <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\" >\r\n         Kategorien\r\n        </Dropdown.Toggle>\r\n      \r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"natur\")}>Natur</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"landschaften\")}>Landschaften</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"gebäude\")}>Gebäude</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"tiere\")}>Tiere</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"sport\")}>Sport</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"personen\")}>Personen</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(NavDropdown)\r\n\r\n","import React from \"react\";\r\nimport \"./mobile-category-menu.styles.scss\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { closeNavbar } from \"../../redux/navbar/navbar.actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst MobileCategoryMenu = ({ closeNavbar }) => {\r\n\r\n  return (\r\n    <div className=\"mobile-category-menu\">\r\n      <div className=\"headline\">Kategorien:</div>\r\n      <div className=\"categories\">\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/landschaften\">\r\n          Landschaften\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/gebäude\">\r\n          Gebäude\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/natur\">\r\n          Natur\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/Tiere\">\r\n          Tiere\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/sport\">\r\n          Sport\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/personen\">\r\n          Personen\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    closeNavbar: () => {\r\n      dispatch(closeNavbar());\r\n    }\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(null, mapDispatchToProps)(MobileCategoryMenu)\r\n);\r\n","export const toggleNavbar = () => ({\r\n    type: \"TOGGLE_NAVBAR\",\r\n})\r\n\r\nexport const closeNavbar = () => ({\r\n    type: \"CLOSE_NAVBAR\",\r\n})","import React from \"react\";\r\nimport \"./header.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { toggleNavbar, closeNavbar } from \"../../redux/navbar/navbar.actions\";\r\n\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nimport Modal from \"../modal/modal.component\"\r\n\r\n// category menus for different screens\r\nimport NavDropdown from \"../nav-dropdown/nav-dropdown.component\";\r\nimport MobileCategoryMenu from \"../mobile-category-menu/mobile-category-menu.component\";\r\nimport { openModal, closeModal } from \"../../redux/modal/modal.actions\";\r\n\r\nconst Header = ({\r\n  favouriteImageIDs,\r\n  showMobileNavbar,\r\n  toggleNavbar,\r\n  closeNavbar,\r\n  closeModal\r\n}) => {\r\n  return (\r\n    <>\r\n    <Navbar  bg=\"dark\" className=\"header\">\r\n      <Link onClick={closeNavbar} className=\"brand\" to=\"/\">\r\n        Image Search\r\n      </Link>\r\n\r\n      {showMobileNavbar ? (\r\n        <div className=\"mobile-nav-links\">\r\n          <NavLink id=\"home-link\" onClick={closeNavbar} exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n\r\n          <MobileCategoryMenu />\r\n\r\n          <NavLink\r\n            onClick={closeNavbar}\r\n            id=\"favourites-link\"\r\n            exact\r\n            to=\"/favoriten\"\r\n          >\r\n            Favoriten ({favouriteImageIDs.length})\r\n          </NavLink>\r\n        </div>\r\n      ) : (\r\n          \"\"\r\n        )}\r\n      <div className=\"desktop-nav-links\">\r\n        <NavLink onClick={closeModal} exact to=\"/\">\r\n          Home\r\n        </NavLink>\r\n\r\n        <NavDropdown closeModal={closeModal}/>\r\n\r\n        <NavLink onClick={closeModal} id=\"favourites-link\" exact to=\"/favoriten\">\r\n          Favoriten ({favouriteImageIDs.length})\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div onClick={toggleNavbar} className=\"toggle-navbar\">\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-1`}></div>\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-2`}></div>\r\n        <div className={`${showMobileNavbar ? \"bar-toggled\" : \"bar-default\"} bar-3`}></div>\r\n      </div>\r\n    </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n  showMobileNavbar: state.navbar.showMobileNavbar\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  toggleNavbar: () => dispatch(toggleNavbar()),\r\n  closeNavbar: () => dispatch(closeNavbar()),\r\n  openModal: () => dispatch(openModal()),\r\n  closeModal: () => dispatch(closeModal())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useState } from 'react';\r\nimport './form.styles.scss';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { setImageAmount, setQueryString, setQueryInfo } from '../../redux/searchImages/searchImages.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nconst MyForm = ({ homepage, handleSubmit, setQueryString, setImageAmount }) => {\r\n\r\n    const handleChange = e => {\r\n        setQueryString(e.target.value);\r\n    };\r\n    const handleSelect = e => {\r\n        setImageAmount(e.target.value);\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-area\">\r\n            <div className=\"form-wrapper\">\r\n                {homepage ? <h3>Beeindruckende lizenzfreie Bilder</h3> : <h3>Weitere Bilder suchen</h3>}\r\n                <Form\r\n                    onSubmit={handleSubmit}\r\n                    className=\"form\"\r\n                >\r\n                    <Form.Group>\r\n                        <Form.Control\r\n                            className=\"mb-3\"\r\n                            required\r\n                            aria-label=\"search images\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            name=\"queryString\"\r\n                            placeholder=\"Schlagwort eingeben...\"\r\n                        />\r\n                        <div className=\"image-amount-wrapper\">\r\n                            <Form.Label>Anzahl Bilder:&nbsp; </Form.Label>\r\n\r\n                            <div className=\"select-wrapper\">\r\n                                <select aria-label=\"select image amount\" name=\"imageAmount\" onInput={handleSelect} className=\"mb-3\">\r\n                                    <option>25</option>\r\n                                    <option>50</option>\r\n                                    <option>100</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button type=\"submit\" variant=\"success\">\r\n                            Suchen\r\n\t\t\t\t\t</Button>\r\n                    </Form.Group>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setImageAmount: amount => dispatch(setImageAmount(amount)),\r\n    setQueryString: queryString => dispatch(setQueryString(queryString)),\r\n    setQueryInfo: queryString => dispatch(setQueryInfo(queryString)),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    queryString: state.searchImages.queryString,\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyForm);\r\n","export const setImageAmount = amount => ({\r\n  type: \"SET_IMAGE_AMOUNT\",\r\n  payload: amount\r\n});\r\n\r\nexport const setQueryString = queryString => ({\r\n  type: \"SET_QUERY_STRING\",\r\n  payload: queryString\r\n});\r\n\r\nexport const setQueryInfo = queryString => ({\r\n  // only change displayed info-text when form is submitted, not on onChange like the query string\r\n  type: \"SET_QUERY_INFO\",\r\n  payload: queryString\r\n});\r\n","const categories = [\r\n\t{   \r\n\t\tname: \"Natur\",\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2015/06/19/21/24/the-road-815297_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Landschaften',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2016/10/22/17/46/scotland-1761292_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Gebäude',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/04/07/06/47/moscow-city-2210335_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Tiere',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/08/12/16/59/ara-3601194_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Sport',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/02/06/14/07/dance-3134828_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Menschen',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/08/30/12/45/girl-2696947_960_720.jpg',\r\n\t},\r\n];\r\nexport default categories","import React from 'react';\r\nimport \"./category-preview.styles.scss\"\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst CategoryPreview = ({ history, category }) => {\r\n    const { imageURL, name } = category\r\n\r\n    const handleClick = () => {\r\n        history.push(`/kategorie/${name.toLowerCase()}`)\r\n        \r\n    }\r\n    return (\r\n        <div onClick={handleClick} className=\"category-preview\" style={{ backgroundImage: `url(${imageURL})` }}>\r\n            <div className=\"name-wrapper\">\r\n                <span>{name}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryPreview)","import React from 'react'\r\nimport \"./category-menu.styles.scss\"\r\n\r\nimport categories from \"./categories\" // category array\r\nimport CategoryPreview from '../category-preview/category-preview.component'\r\n\r\nfunction CategoryMenu() {\r\n    return (\r\n        <div className=\"category-menu bg-light\">\r\n            {categories.map(category => {\r\n               return <CategoryPreview key={category.name} category={category}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CategoryMenu\r\n","import React from 'react';\r\nimport \"./footer.styles.scss\"\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer bg-light\">\r\n            <span onClick={() => window.scrollTo(0, 0)} className=\"button\"><i className=\"fas fa-chevron-up\"></i></span> \r\n            <span className=\"link\">&copy; <a href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./home.styles.scss\";\r\n\r\nimport MyForm from \"../../components/form/form.component\";\r\nimport CategoryMenu from \"../../components/category-menu/category-menu.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst HomePage = ({ history, queryString }) => {\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    history.push(`/suche/${queryString}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <MyForm homepage handleSubmit={handleSubmit} />\r\n      <CategoryMenu />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  queryString: state.searchImages.queryString\r\n});\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import React, { useState } from 'react';\r\nimport './preview-image-footer.styles.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleFavouriteImage } from '../../redux/favouriteImages/favouriteImages.actions';\r\nimport { openModal, closeModal } from '../../redux/modal/modal.actions';\r\n\r\n\r\nconst PreviewImageFooter = ({ toggleFavouriteImage, openModal, favouriteImageIDs, image, }) => {\r\n\r\n\r\n    const { largeImageURL, user, userImageURL } = image;\r\n\r\n    return (\r\n        <div className=\"image-footer\">\r\n            <p>&copy; {user}</p>\r\n\r\n            <div className=\"button-wrapper\">\r\n                <span className=\"modal-link\" onClick={() => openModal(image)}>\r\n                    <i className=\"fas fa-search-plus\"></i>\r\n                </span>\r\n\r\n                <span className=\"mobile-link\">\r\n                    <a href={largeImageURL}> <i className=\"fas fa-search-plus\"></i></a>\r\n                </span>\r\n\r\n                <span\r\n                    onClick={() => toggleFavouriteImage(image.id)}\r\n                    className={`toggle-favourite ${favouriteImageIDs.includes(image.id) ? 'is-favourite-image' : ''}`}\r\n                >\r\n                    <i className=\"fas fa-heart\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleFavouriteImage: image => dispatch(toggleFavouriteImage(image)),\r\n    openModal: image => dispatch(openModal(image)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewImageFooter);\r\n","import React from \"react\";\r\nimport \"./preview-image.styles.scss\";\r\n\r\nimport PreviewImageFooter from \"../preview-image-footer/preview-image-footer.component\";\r\n\r\nconst PreviewImage = ({ image }) => {\r\n  const { webformatURL, id } = image;\r\n\r\n  const unusableImages = [384178, 2534484]// images where resolution is too low\r\n  \r\n  if(unusableImages.includes(id)){ \r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"preview-image-wrapper\">\r\n      <img src={webformatURL} alt=\"\" />\r\n      <PreviewImageFooter image={image}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./favourites.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst FavoritenPage = ({ favouriteImageIDs }) => {\r\n  const [favouriteImages, setFavouriteImages] = useState([]);\r\n  let cachedFavouriteImages = [];\r\n\r\n  const fetchFavouriteImages = () => {\r\n    if (favouriteImageIDs.length) {\r\n      favouriteImageIDs.forEach(imageID => {\r\n        fetch(\r\n          `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&id=${imageID}`\r\n        )\r\n          .then(res => res.json())\r\n          .then(data => {\r\n            const image = data.hits;\r\n            cachedFavouriteImages = [...cachedFavouriteImages, ...image];\r\n            setFavouriteImages(cachedFavouriteImages);\r\n          });\r\n      });\r\n    } else {\r\n      setFavouriteImages([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFavouriteImages();\r\n  }, [favouriteImageIDs]);\r\n\r\n  return (\r\n    <div className=\"favoriten-page bg-light\">\r\n      <div className=\"header-area\">\r\n        <h3>Deine Favoriten:</h3>\r\n      </div>\r\n\r\n      <div className=\"favourite-images\">\r\n        {favouriteImages.length ? (\r\n          favouriteImages.map(image => {\r\n            return <PreviewImage key={image.id} image={image} />;\r\n          })\r\n        ) : (\r\n          <span className=\"empty\">\r\n            Du hast keine Bilder zu deinen Favoriten hinzugefügt\r\n          </span>\r\n        )}\r\n      </div>\r\n      {favouriteImages.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoritenPage);\r\n","import React from 'react';\r\nimport \"./info.styles.scss\"\r\n\r\nconst InfoPage = () => {\r\n    return (\r\n        <div className=\"info-page\">\r\n            <div className=\"info-details\">\r\n            <h3>Infos zum Projekt</h3>\r\n            <p>Bilderquelle: <a className=\"color-primary\" href=\"https://pixabay.com/de/\">pixabay-API</a></p>\r\n            <p>Umsetzung der Such- und Favoritenfunktion, Darstellung der Bilder: <a className=\"color-primary\" href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></p>\r\n            <p className=\"disclaimer\"> Dieses Projekt ist ein Portfolio-Projekt. <br/> Es soll den Umgang mit einfachen APIs sowie die Nutzung von Redux und dem \r\n                Session- bzw. Localstorge darstellen.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default InfoPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./custom-image-search.styles.scss\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\nimport MyForm from \"../../components/form/form.component\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst CustomImageSearchPage = ({ imageAmount, queryString, match, history }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [noImagesFound, setNoImagesFound] = useState(false);\r\n  const [queryInfo, setQueryInfo] = useState(\"\");\r\n\r\n  const urlQueryString = match.params.urlQueryString;\r\n\r\n  const fetchImages = () => {\r\n  \r\n    fetch(\r\n      `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&q=${urlQueryString}&lang=de&per_page=${imageAmount}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const images = data.hits;\r\n        if (images.length) {\r\n          setImages(images);\r\n          setNoImagesFound(false);\r\n        } else if (!images.length) {\r\n          setNoImagesFound(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    setQueryInfo(urlQueryString);\r\n\r\n  }, [urlQueryString]);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    setQueryInfo(urlQueryString);\r\n    history.push(`/suche/${queryString}`);\r\n    fetchImages();\r\n    window.scrollTo(0, 350)\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-search-image-page bg-light\">\r\n      <MyForm handleSubmit={handleSubmit} />\r\n      {noImagesFound ? (\r\n        <p className=\"no-images-found\">Keine Bilder gefunden</p>\r\n      ) : (\r\n        <div>\r\n          {queryInfo && images.length ? (\r\n            <p id=\"query-info\" className=\"query-info bg-dark\">Ergebnisse für \"{queryInfo}\":</p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"display-images\">\r\n            {images.map(image => (\r\n              <PreviewImage key={image.id} image={image} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {images.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  imageAmount: state.searchImages.imageAmount,\r\n  queryString: state.searchImages.queryString,\r\n  queryInfo: state.searchImages.queryInfo,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CustomImageSearchPage);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./display-category.styles.scss\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst CategoryPage = ({ match }) => {\r\n    const category = match.params.name;\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchCategoryImages();\r\n    }, [category]);\r\n\r\n    const fetchCategoryImages = () => {\r\n        fetch(\r\n            `https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&per_page=100&q=${category}&lang=de&safesearch=true}`\r\n        )\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const images = data.hits;\r\n                setImages(images);\r\n\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"category-wrapper \">\r\n            <div className=\"category-heading\">\r\n                <h3>\r\n                    Kategorie: {category.charAt(0).toUpperCase()}\r\n                    {category.slice(1)}\r\n                </h3>\r\n            </div>\r\n            <div className=\"category-images bg-light\">\r\n                {images.map(image => (\r\n                    <PreviewImage key={image.id} image={image} />\r\n                ))}\r\n            </div>\r\n            {images.length ? <Footer /> : \"\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/header/header.component\";\r\n\r\nimport HomePage from \"./pages/home/home.component\";\r\nimport FavoritenPage from \"./pages/favourites/favourites.component\";\r\nimport InfoPage from \"./pages/info/info.component\";\r\nimport CustomImageSearchPag from \"./pages/custom-image-search/custom-image-search.component\";\r\nimport CategoryPage from \"./pages/display-category/display-category.component\";\r\nimport Modal from \"./components/modal/modal.component\"\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App bg-light\">\r\n      <Header />\r\n      <Modal/>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route path=\"/favoriten\" component={FavoritenPage} />\r\n      <Route path=\"/infos\" component={InfoPage} />\r\n      <Route path=\"/suche/:urlQueryString\" component={CustomImageSearchPag} />\r\n      <Route exact path=\"/kategorie/:name\" component={CategoryPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n\r\n","export const handleToggleFavouriteImage = (currentImageIDs, imageIDToAdd) => {\r\n    if (currentImageIDs.includes(imageIDToAdd)) {\r\n        return currentImageIDs.filter(currentImageID => currentImageID !== imageIDToAdd)\r\n    } else {\r\n        return [...currentImageIDs, imageIDToAdd]\r\n    }\r\n}","import { handleToggleFavouriteImage } from \"./favouriteImages.utils\";\r\n\r\nconst initalState = {\r\n\timageIDs: [],\r\n};\r\n\r\nexport const favouriteImagesReducer = (state = initalState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"TOGGLE_FAVOURITE_IMAGE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timageIDs: handleToggleFavouriteImage(state.imageIDs, action.payload)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","const initalState = {\r\n\timageAmount: 25,\r\n\tqueryString: '',\r\n\tqueryInfo: \"\",\r\n};\r\n\r\nexport const searchImagesReducer = (state = initalState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_IMAGE_AMOUNT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timageAmount: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_QUERY_STRING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tqueryString: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_QUERY_INFO':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tqueryInfo: action.payload, \r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","const initialState = {\r\n  showMobileNavbar: false\r\n};\r\nexport const navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: !state.showMobileNavbar\r\n      };\r\n    case \"CLOSE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n    currentImage: null\r\n}\r\nexport const modalReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"OPEN_MODAL\":\r\n            return {\r\n                ...state,\r\n               currentImage: action.payload\r\n            }\r\n        case \"CLOSE_MODAL\":\r\n            return {\r\n                ...state,\r\n                currentImage: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport { favouriteImagesReducer } from \"./favouriteImages/favouriteImages.reducer\";\r\nimport { searchImagesReducer } from \"./searchImages/searchImages.reducer\"\r\nimport { navbarReducer } from \"./navbar/navbar.reducer\"\r\nimport { modalReducer } from \"./modal/modal.reducer\"\r\n\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: [\"favouriteImages\"]\r\n  };\r\n  \r\n\r\n const rootReducer = combineReducers({\r\n    favouriteImages: favouriteImagesReducer,\r\n    searchImages: searchImagesReducer,\r\n    navbar: navbarReducer,\r\n    modal: modalReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig, rootReducer)\r\n","\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport  rootReducer from './rootReducer'\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nconst middlewares = []\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    middlewares.push(logger);\r\n  }  \r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nimport { HashRouter as Router } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\nimport ScrollToTop from './utility-components/scroll-to-top'; //scroll to top after each route change\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<ScrollToTop>\r\n\t\t\t\t<PersistGate persistor={persistor}>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</PersistGate>\r\n\t\t\t</ScrollToTop>\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}