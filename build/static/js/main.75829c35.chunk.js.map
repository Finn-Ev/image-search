{"version":3,"sources":["redux/modal/modal.actions.js","components/mobile-category-menu/mobile-category-menu.component.jsx","redux/navbar/navbar.actions.js","components/nav-dropdown/nav-dropdown.component.jsx","components/header/header.component.jsx","components/form/form.component.jsx","redux/searchImages/searchImages.actions.js","components/category-menu/categories.js","components/category-preview/category-preview.component.jsx","components/category-menu/category-menu.component.jsx","components/footer/footer.component.jsx","pages/home/home.component.jsx","redux/favouriteImages/favouriteImages.actions.js","components/preview-image-footer/preview-image-footer.component.jsx","components/preview-image/preview-image.component.jsx","pages/favourites/favourites.component.jsx","pages/info/info.component.jsx","api/index.js","pages/custom-image-search/custom-image-search.component.jsx","pages/display-category/display-category.component.jsx","components/modal/modal.component.jsx","App.js","redux/favouriteImages/favouriteImages.utils.js","redux/favouriteImages/favouriteImages.reducer.js","redux/modal/modal.reducer.js","redux/navbar/navbar.reducer.js","redux/rootReducer.js","redux/searchImages/searchImages.reducer.js","redux/store.js","utility-components/scroll-to-top.jsx","serviceWorker.js","index.js"],"names":["openModal","image","type","payload","withRouter","connect","dispatch","closeNavbar","className","onClick","to","history","closeModal","handleSelect","category","push","Dropdown","alignRight","size","Toggle","variant","id","Menu","Item","state","favouriteImageIDs","favouriteImages","imageIDs","showMobileNavbar","navbar","toggleNavbar","Navbar","bg","exact","length","setImageAmount","amount","homepage","handleSubmit","useState","queryString","setQueryString","Form","onSubmit","e","Group","Control","required","aria-label","onChange","target","value","name","placeholder","Label","onInput","parseInt","Button","categories","imageURL","toLowerCase","style","backgroundImage","CategoryMenu","map","key","Footer","window","scrollTo","href","HomePage","preventDefault","toggleFavouriteImage","largeImageURL","user","userImageURL","includes","PreviewImage","webformatURL","src","alt","setFavouriteImages","useEffect","fetchFavouriteImages","stackedFavouriteImages","forEach","imageID","a","fetch","response","json","data","hits","error","InfoPage","url","fetchCategoryImages","fetchCustomImages","urlQueryString","imageAmount","match","images","setImages","params","fetchAPI","CategoryPage","console","log","charAt","toUpperCase","slice","currentImage","modal","App","path","component","FavoritenPage","CustomImageSearchPage","handleToggleFavouriteImage","currentImageIDs","imageIDToAdd","filter","currentImageID","initalState","initialState","persistConfig","storage","whitelist","rootReducer","combineReducers","action","persistReducer","store","createStore","applyMiddleware","persistor","persistStore","ScrollToTop","prevProps","this","props","location","children","React","Component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.75829c35.chunk.js","sourcesContent":["export const openModal = image => ({\r\n    type: \"OPEN_MODAL\",\r\n    payload: image\r\n})\r\n\r\nexport const closeModal = () => ({\r\n    type: \"CLOSE_MODAL\",\r\n})","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\nimport { closeNavbar } from \"../../redux/navbar/navbar.actions\";\r\nimport \"./mobile-category-menu.styles.scss\";\r\n\r\nconst MobileCategoryMenu = ({ closeNavbar }) => {\r\n  return (\r\n    <div className=\"mobile-category-menu\">\r\n      <div className=\"headline\">Kategorien:</div>\r\n      <div className=\"categories\">\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/landschaften\">\r\n          Landschaften\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/gebäude\">\r\n          Gebäude\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/natur\">\r\n          Natur\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/Tiere\">\r\n          Tiere\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/sport\">\r\n          Sport\r\n        </NavLink>\r\n        <NavLink onClick={() => closeNavbar()} to=\"/kategorie/personen\">\r\n          Personen\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    closeNavbar: () => {\r\n      dispatch(closeNavbar());\r\n    },\r\n  };\r\n};\r\nexport default withRouter(\r\n  connect(null, mapDispatchToProps)(MobileCategoryMenu)\r\n);\r\n","export const toggleNavbar = () => ({\r\n    type: \"TOGGLE_NAVBAR\",\r\n})\r\n\r\nexport const closeNavbar = () => ({\r\n    type: \"CLOSE_NAVBAR\",\r\n})","import React from 'react';\r\nimport \"./nav-dropdown.styles.scss\"\r\n \r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst NavDropdown = ({history, closeModal}) => {\r\n    const handleSelect = category => {\r\n        history.push(`/kategorie/${category}`)\r\n        closeModal()\r\n    }\r\n\r\n    return (\r\n        <Dropdown alignRight size=\"sm\" className=\"dropdown\">\r\n        <Dropdown.Toggle variant=\"link\" id=\"dropdown-basic\" >\r\n         Kategorien\r\n        </Dropdown.Toggle>\r\n      \r\n        <Dropdown.Menu>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"natur\")}>Natur</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"landschaften\")}>Landschaften</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"gebäude\")}>Gebäude</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"tiere\")}>Tiere</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"sport\")}>Sport</Dropdown.Item>\r\n          <Dropdown.Item onClick={()=>handleSelect(\"personen\")}>Personen</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n}\r\n\r\n\r\nexport default withRouter(NavDropdown)\r\n\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { closeModal, openModal } from \"../../redux/modal/modal.actions\";\r\nimport { closeNavbar, toggleNavbar } from \"../../redux/navbar/navbar.actions\";\r\nimport MobileCategoryMenu from \"../mobile-category-menu/mobile-category-menu.component\";\r\n// category menus for different screens\r\nimport NavDropdown from \"../nav-dropdown/nav-dropdown.component\";\r\nimport \"./header.styles.scss\";\r\n\r\nconst Header = ({\r\n  favouriteImageIDs,\r\n  showMobileNavbar,\r\n  toggleNavbar,\r\n  closeNavbar,\r\n  closeModal,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" className=\"header\">\r\n        <Link onClick={closeNavbar} className=\"brand\" to=\"/\">\r\n          Image Search\r\n        </Link>\r\n\r\n        {showMobileNavbar ? (\r\n          <div className=\"mobile-nav-links\">\r\n            <NavLink id=\"home-link\" onClick={closeNavbar} exact to=\"/\">\r\n              Home\r\n            </NavLink>\r\n\r\n            <MobileCategoryMenu />\r\n\r\n            <NavLink\r\n              onClick={closeNavbar}\r\n              id=\"favourites-link\"\r\n              exact\r\n              to=\"/favoriten\"\r\n            >\r\n              Favoriten ({favouriteImageIDs.length})\r\n            </NavLink>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"desktop-nav-links\">\r\n          <NavLink onClick={closeModal} exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n\r\n          <NavDropdown closeModal={closeModal} />\r\n\r\n          <NavLink\r\n            onClick={closeModal}\r\n            id=\"favourites-link\"\r\n            exact\r\n            to=\"/favoriten\"\r\n          >\r\n            Favoriten ({favouriteImageIDs.length})\r\n          </NavLink>\r\n        </div>\r\n\r\n        <div onClick={toggleNavbar} className=\"toggle-navbar\">\r\n          <div\r\n            className={`${\r\n              showMobileNavbar ? \"bar-toggled\" : \"bar-default\"\r\n            } bar-1`}\r\n          ></div>\r\n          <div\r\n            className={`${\r\n              showMobileNavbar ? \"bar-toggled\" : \"bar-default\"\r\n            } bar-2`}\r\n          ></div>\r\n          <div\r\n            className={`${\r\n              showMobileNavbar ? \"bar-toggled\" : \"bar-default\"\r\n            } bar-3`}\r\n          ></div>\r\n        </div>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n  showMobileNavbar: state.navbar.showMobileNavbar,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleNavbar: () => dispatch(toggleNavbar()),\r\n  closeNavbar: () => dispatch(closeNavbar()),\r\n  openModal: () => dispatch(openModal()),\r\n  closeModal: () => dispatch(closeModal()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n\r\n// expotz createPortal(mapDispatchToProps\r\n//   <DeviceLightEvent alert = dispatchEvent\r\n//         TabPane objectHash GamepadHapticActuator heilllll\r\n\r\n//         import tt\r\n","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { connect } from \"react-redux\";\r\nimport { setImageAmount } from \"../../redux/searchImages/searchImages.actions\";\r\nimport \"./form.styles.scss\";\r\n\r\nconst MyForm = ({ homepage, handleSubmit, setImageAmount }) => {\r\n  const [queryString, setQueryString] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setQueryString(e.target.value);\r\n  };\r\n  const handleSelect = (e) => {\r\n    setImageAmount(parseInt(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-area\">\r\n      <div className=\"form-wrapper\">\r\n        {homepage ? (\r\n          <h3>Beeindruckende lizenzfreie Bilder</h3>\r\n        ) : (\r\n          <h3>Weitere Bilder suchen</h3>\r\n        )}\r\n        <Form onSubmit={(e) => handleSubmit(e, queryString)} className=\"form\">\r\n          <Form.Group>\r\n            <Form.Control\r\n              className=\"mb-3\"\r\n              required\r\n              aria-label=\"search images\"\r\n              onChange={handleChange}\r\n              type=\"text\"\r\n              name=\"queryString\"\r\n              placeholder=\"Schlagwort eingeben...\"\r\n            />\r\n            <div className=\"image-amount-wrapper\">\r\n              <Form.Label>Anzahl Bilder:&nbsp; </Form.Label>\r\n\r\n              <div className=\"select-wrapper\">\r\n                <select\r\n                  aria-label=\"select image amount\"\r\n                  name=\"imageAmount\"\r\n                  onInput={(e) => handleSelect(e)}\r\n                  className=\"mb-3\"\r\n                >\r\n                  <option value={25}>25</option>\r\n                  <option value={50}>50</option>\r\n                  <option value={100}>100</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <Button type=\"submit\" variant=\"success\">\r\n              Suchen\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setImageAmount: (amount) => dispatch(setImageAmount(amount)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(MyForm);\r\n","export const setImageAmount = amount => ({\r\n  type: \"SET_IMAGE_AMOUNT\",\r\n  payload: amount\r\n});\r\n","const categories = [\r\n\t{   \r\n\t\tname: \"Natur\",\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2015/06/19/21/24/the-road-815297_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Landschaften',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2016/10/22/17/46/scotland-1761292_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Gebäude',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/04/07/06/47/moscow-city-2210335_1280.jpg',\r\n    },\r\n    {\r\n\t\tname: 'Tiere',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/08/12/16/59/ara-3601194_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Sport',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2018/02/06/14/07/dance-3134828_1280.jpg',\r\n\t},\r\n\t{\r\n\t\tname: 'Menschen',\r\n\t\timageURL: 'https://cdn.pixabay.com/photo/2017/08/30/12/45/girl-2696947_960_720.jpg',\r\n\t},\r\n];\r\nexport default categories","import React from 'react';\r\nimport \"./category-preview.styles.scss\"\r\n\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst CategoryPreview = ({ history, category }) => {\r\n    const { imageURL, name } = category\r\n\r\n    const handleClick = () => {\r\n        history.push(`/kategorie/${name.toLowerCase()}`)\r\n        \r\n    }\r\n    return (\r\n        <div onClick={handleClick} className=\"category-preview\" style={{ backgroundImage: `url(${imageURL})` }}>\r\n            <div className=\"name-wrapper\">\r\n                <span>{name}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(CategoryPreview)","import React from \"react\";\r\nimport \"./category-menu.styles.scss\";\r\n\r\nimport categories from \"./categories\"; // category array\r\nimport CategoryPreview from \"../category-preview/category-preview.component\";\r\n\r\nfunction CategoryMenu() {\r\n  return (\r\n    <div className=\"category-menu bg-light\">\r\n      {categories.map((category) => {\r\n        return <CategoryPreview key={category.name} category={category} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport \"./footer.styles.scss\"\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer bg-light\">\r\n            <span onClick={() => window.scrollTo(0, 0)} className=\"button\"><i className=\"fas fa-chevron-up\"></i></span> \r\n            <span className=\"link\">&copy; <a href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./home.styles.scss\";\r\n\r\nimport MyForm from \"../../components/form/form.component\";\r\nimport CategoryMenu from \"../../components/category-menu/category-menu.component\";\r\n\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst HomePage = ({ history }) => {\r\n  const handleSubmit = (e, queryString) => {\r\n    e.preventDefault();\r\n    history.push(`/suche/${queryString}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <MyForm homepage handleSubmit={handleSubmit} />\r\n      <CategoryMenu />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage\r\n","export const toggleFavouriteImage = image => ({\r\n    type: \"TOGGLE_FAVOURITE_IMAGE\",\r\n    payload: image\r\n})\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './preview-image-footer.styles.scss';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { toggleFavouriteImage } from '../../redux/favouriteImages/favouriteImages.actions';\r\nimport { openModal, closeModal } from '../../redux/modal/modal.actions';\r\n\r\n\r\nconst PreviewImageFooter = ({ toggleFavouriteImage, openModal, favouriteImageIDs, image, }) => {\r\n\r\n\r\n    const { largeImageURL, user, userImageURL } = image;\r\n\r\n    return (\r\n        <div className=\"image-footer\">\r\n            <p>&copy; {user}</p>\r\n\r\n            <div className=\"button-wrapper\">\r\n                <span className=\"modal-link\" onClick={() => openModal(image)}>\r\n                    <i className=\"fas fa-search-plus\"></i>\r\n                </span>\r\n\r\n                <span className=\"mobile-link\">\r\n                    <a href={largeImageURL}> <i className=\"fas fa-search-plus\"></i></a>\r\n                </span>\r\n\r\n                <span\r\n                    onClick={() => toggleFavouriteImage(image.id)}\r\n                    className={`toggle-favourite ${favouriteImageIDs.includes(image.id) ? 'is-favourite-image' : ''}`}\r\n                >\r\n                    <i className=\"fas fa-heart\"></i>\r\n                </span>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\nconst mapStateToProps = state => ({\r\n    favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    toggleFavouriteImage: image => dispatch(toggleFavouriteImage(image)),\r\n    openModal: image => dispatch(openModal(image)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PreviewImageFooter);\r\n","import React from \"react\";\r\nimport \"./preview-image.styles.scss\";\r\n\r\nimport PreviewImageFooter from \"../preview-image-footer/preview-image-footer.component\";\r\n\r\nconst PreviewImage = ({ image }) => {\r\n  const { webformatURL, id } = image;\r\n\r\n  const unusableImages = [384178, 2534484]// images where resolution is too low\r\n  \r\n  if(unusableImages.includes(id)){ \r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"preview-image-wrapper\">\r\n      <img src={webformatURL} alt=\"\" />\r\n      <PreviewImageFooter image={image}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewImage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./favourites.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\n\r\nconst FavoritenPage = ({ favouriteImageIDs }) => {\r\n  const [favouriteImages, setFavouriteImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n   fetchFavouriteImages()\r\n  }, [favouriteImageIDs]);\r\n\r\n  const fetchFavouriteImages = () => {\r\n    let stackedFavouriteImages = []\r\n    try {\r\n        if (favouriteImageIDs.length) {\r\n           favouriteImageIDs.forEach( async imageID => {\r\n                const response = await fetch(`https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1&id=${imageID}`)\r\n                const data = await response.json()\r\n                const image = data.hits\r\n                stackedFavouriteImages = [...stackedFavouriteImages, ...image];     \r\n                setFavouriteImages(stackedFavouriteImages)\r\n            });\r\n           \r\n        } else {\r\n          setFavouriteImages([])\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n};\r\n\r\n  return (\r\n    <div className=\"favoriten-page bg-light\">\r\n      <div className=\"header-area\">\r\n        <h3>Deine Favoriten:</h3>\r\n      </div>\r\n\r\n      <div className=\"favourite-images\">\r\n        {favouriteImages.length ? (\r\n          favouriteImages.map(image => {\r\n            return <PreviewImage key={image.id} image={image} />;\r\n          })\r\n        ) : (\r\n            <span className=\"empty\">\r\n              Du hast keine Bilder zu deinen Favoriten hinzugefügt\r\n            </span>\r\n          )}\r\n      </div>\r\n      {favouriteImages.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  favouriteImageIDs: state.favouriteImages.imageIDs,\r\n});\r\n\r\nexport default connect(mapStateToProps)(FavoritenPage);\r\n","import React from 'react';\r\nimport \"./info.styles.scss\"\r\n\r\nconst InfoPage = () => {\r\n    return (\r\n        <div className=\"info-page\">\r\n            <div className=\"info-details\">\r\n            <h3>Infos zum Projekt</h3>\r\n            <p>Bilderquelle: <a className=\"color-primary\" href=\"https://pixabay.com/de/\">pixabay-API</a></p>\r\n            <p>Umsetzung der Such- und Favoritenfunktion, Darstellung der Bilder: <a className=\"color-primary\" href=\"https://finnevermann.netlify.com/\">Finn Evermann</a></p>\r\n            <p className=\"disclaimer\"> Dieses Projekt ist ein Portfolio-Projekt. <br/> Es soll den Umgang mit einfachen APIs sowie die Nutzung von Redux und dem \r\n                Session- bzw. Localstorge darstellen.\r\n            </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default InfoPage;\r\n","const url = \"https://pixabay.com/api/?key=15127892-8696442402301390dd419b3b1\";\r\n\r\nexport const fetchCategoryImages = async (category) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${url}&per_page=100&q=${category}&lang=de&safesearch=true}`\r\n    );\r\n\r\n    const { hits } = await response.json();\r\n\r\n    return hits;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchCustomImages = async (urlQueryString, imageAmount) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${url}&q=${urlQueryString}&lang=de&per_page=${imageAmount}`\r\n    );\r\n\r\n    const { hits } = await response.json();\r\n\r\n    return hits;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchCustomImages } from \"../../api\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\nimport MyForm from \"../../components/form/form.component\";\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport \"./custom-image-search.styles.scss\";\r\n\r\nconst CustomImageSearchPage = ({ imageAmount, match, history }) => {\r\n  const [images, setImages] = useState([]);\r\n  const urlQueryString = match.params.urlQueryString;\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setImages(await fetchCustomImages(urlQueryString, imageAmount));\r\n    };\r\n    fetchAPI();\r\n  }, [urlQueryString]);\r\n\r\n  const handleSubmit = async (e, queryString) => {\r\n    e.preventDefault();\r\n    history.push(`/suche/${queryString}`);\r\n\r\n    setImages(await fetchCustomImages(urlQueryString, imageAmount));\r\n    window.scrollTo(0, 350);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-search-image-page bg-light\">\r\n      <MyForm handleSubmit={handleSubmit} />\r\n      <div>\r\n        {urlQueryString ? (\r\n          <p id=\"query-info\" className=\"query-info bg-dark\">\r\n            {images.length === 0\r\n              ? `Keine Ergebnisse für ${urlQueryString}`\r\n              : `Ergebnisse für \"${urlQueryString}\": (${images.length})`}\r\n          </p>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className=\"display-images\">\r\n          {images.map((image) => (\r\n            <PreviewImage key={image.id} image={image} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {images.length > 3 ? <Footer /> : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  imageAmount: state.imageAmount,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CustomImageSearchPage);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./display-category.styles.scss\";\r\n\r\nimport PreviewImage from \"../../components/preview-image/preview-image.component\";\r\nimport Footer from \"../../components/footer/footer.component\";\r\nimport { fetchCategoryImages } from \"../../api\";\r\n\r\n\r\n\r\nconst CategoryPage = ({ match }) => {\r\n    const category = match.params.name;\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setImages(await fetchCategoryImages(category))\r\n        }\r\n        fetchAPI()\r\n        console.log(\"live 2\");\r\n\r\n    }, [category]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"category-wrapper \">\r\n            <div className=\"category-heading\">\r\n                <h3>\r\n                    Kategorie: {category.charAt(0).toUpperCase()}\r\n                    {category.slice(1)}\r\n                </h3>\r\n            </div>\r\n            <div className=\"category-images bg-light\">\r\n                {images.map(image => (\r\n                    <PreviewImage key={image.id} image={image} />\r\n                ))}\r\n            </div>\r\n            {images.length ? <Footer /> : \"\"}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React from \"react\";\r\nimport \"./modal.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { closeModal } from \"../../redux/modal/modal.actions\";\r\nimport { toggleFavouriteImage } from \"../../redux/favouriteImages/favouriteImages.actions\";\r\n\r\nconst Modal = ({\r\n  closeModal,\r\n  toggleFavouriteImage,\r\n  currentImage,\r\n  favouriteImageIDs,\r\n}) => {\r\n  return currentImage ? (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-buttons\">\r\n        <span\r\n          onClick={() => toggleFavouriteImage(currentImage.id)}\r\n          className={`toggle-favourite ${\r\n            favouriteImageIDs.includes(currentImage.id)\r\n              ? \"is-favourite-image\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <i className=\"fas fa-heart\"></i>\r\n        </span>\r\n        <span onClick={closeModal} className=\"close-modal\">\r\n          X\r\n        </span>\r\n      </div>\r\n      <div className=\"modal-body\">\r\n        <img src={currentImage.largeImageURL} alt=\"largeImage\" />\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentImage: state.modal.currentImage,\r\n    favouriteImageIDs: state.favouriteImages.imageIDs,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  closeModal: () => dispatch(closeModal()),\r\n  toggleFavouriteImage: (image) => dispatch(toggleFavouriteImage(image)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./components/header/header.component\";\r\n\r\nimport HomePage from \"./pages/home/home.component\";\r\nimport FavoritenPage from \"./pages/favourites/favourites.component\";\r\nimport InfoPage from \"./pages/info/info.component\";\r\nimport CustomImageSearchPage from \"./pages/custom-image-search/custom-image-search.component\";\r\nimport CategoryPage from \"./pages/display-category/display-category.component\";\r\nimport Modal from \"./components/modal/modal.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App bg-light\">\r\n      <Header />\r\n      <Modal />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route path=\"/favoriten\" component={FavoritenPage} />\r\n      <Route path=\"/infos\" component={InfoPage} />\r\n      <Route path=\"/suche/:urlQueryString\" component={CustomImageSearchPage} />\r\n      <Route exact path=\"/kategorie/:name\" component={CategoryPage} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const handleToggleFavouriteImage = (currentImageIDs, imageIDToAdd) => {\r\n    if (currentImageIDs.includes(imageIDToAdd)) {\r\n        return currentImageIDs.filter(currentImageID => currentImageID !== imageIDToAdd)\r\n    } else {\r\n        return [...currentImageIDs, imageIDToAdd]\r\n    }\r\n}","import { handleToggleFavouriteImage } from \"./favouriteImages.utils\";\r\n\r\nconst initalState = {\r\n\timageIDs: [],\r\n};\r\n\r\nexport const favouriteImagesReducer = (state = initalState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase \"TOGGLE_FAVOURITE_IMAGE\":\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\timageIDs: handleToggleFavouriteImage(state.imageIDs, action.payload)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","const initialState = {\r\n    currentImage: null\r\n}\r\nexport const modalReducer= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"OPEN_MODAL\":\r\n            return {\r\n                ...state,\r\n               currentImage: action.payload\r\n            }\r\n        case \"CLOSE_MODAL\":\r\n            return {\r\n                ...state,\r\n                currentImage: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","const initialState = {\r\n  showMobileNavbar: false,\r\n};\r\nexport const navbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TOGGLE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: !state.showMobileNavbar,\r\n      };\r\n    case \"CLOSE_NAVBAR\":\r\n      return {\r\n        ...state,\r\n        showMobileNavbar: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { favouriteImagesReducer } from \"./favouriteImages/favouriteImages.reducer\";\r\nimport { modalReducer } from \"./modal/modal.reducer\";\r\nimport { navbarReducer } from \"./navbar/navbar.reducer\";\r\nimport { imageAmountReducer } from \"./searchImages/searchImages.reducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"favouriteImages\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  favouriteImages: favouriteImagesReducer,\r\n  imageAmount: imageAmountReducer,\r\n  navbar: navbarReducer,\r\n  modal: modalReducer,\r\n});\r\n\r\nexport default persistReducer(persistConfig, rootReducer);\r\n","export const imageAmountReducer = (state = 25, action) => {\r\n  switch (action.type) {\r\n    case \"SET_IMAGE_AMOUNT\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nimport  rootReducer from './rootReducer'\r\n\r\nimport logger from \"redux-logger\";\r\n\r\nconst middlewares = []\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n    middlewares.push(logger);\r\n  }  \r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\r\n\r\nexport const persistor = persistStore(store);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ScrollToTop extends React.Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      window.scrollTo(0, 0)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nimport ScrollToTop from \"./utility-components/scroll-to-top\"; //scroll to top after each route change\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <ScrollToTop>\r\n        <PersistGate persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </ScrollToTop>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}